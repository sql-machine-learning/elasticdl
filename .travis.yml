language: minimal

dist: xenial

env:
  global:
    - MINIKUBE_WANTUPDATENOTIFICATION=false
    - MINIKUBE_WANTREPORTERRORPROMPT=false
    - MINIKUBE_HOME=$HOME
    - CHANGE_MINIKUBE_NONE_USER=true
    - KUBECONFIG=$HOME/.kube/config
    - K8S_VERSION=1.13.0
    - MINIKUBE_VERSION=0.35.0

addons:
  apt:
    packages:
      - docker-ce

install:
  - set -e
  - docker version

stages:
  - precommit
  - unittest
  - integrationtest

jobs:
  include:
    - stage: precommit
      name: "Pre-commit Check"
      script:
        - docker build --build-arg BUILD_ENV=no_data -t elasticdl:dev -f elasticdl/docker/Dockerfile .
        - docker run --rm -it -v $(pwd):/v -w /v elasticdl:dev bash -c "pre-commit run --files $(find elasticdl/python -name '*.py' -print0 | tr '\0' ' ')"
    - stage: unittest
      name: "Unit Tests"
      script:
        - docker build --build-arg BUILD_ENV=no_data -t elasticdl:dev -f elasticdl/docker/Dockerfile .
        - docker run --rm -it -v $(pwd):/v -w / elasticdl:dev bash -c "make && K8S_TESTS=False pytest elasticdl/python/tests"
    - stage: integrationtest
      name: "Integration Tests"
      script:
        - curl -Lo kubectl https://storage.googleapis.com/kubernetes-release/release/v$K8S_VERSION/bin/linux/amd64/kubectl && chmod +x kubectl && sudo mv kubectl /usr/local/bin/
        - curl -Lo minikube https://storage.googleapis.com/minikube/releases/v$MINIKUBE_VERSION/minikube-linux-amd64 && chmod +x minikube && sudo mv minikube /usr/local/bin/
        - mkdir -p $HOME/.kube $HOME/.minikube
        - touch $KUBECONFIG
        # Start minikube
        - sudo minikube start --vm-driver=none --kubernetes-version=v$K8S_VERSION
        - "sudo chown -R travis: /home/travis/.minikube/"
        - kubectl cluster-info
        - docker build -t elasticdl:data -f elasticdl/docker/Dockerfile.data .
        - docker build -t elasticdl:dev -f elasticdl/docker/Dockerfile .
        # Run unit tests related to k8s
        - docker run --rm -it --net=host -v $HOME/.kube:/root/.kube -v /home/travis/.minikube/:/home/travis/.minikube/ -v $(pwd):/v -w / elasticdl:dev bash -c "make && K8S_TESTS=True pytest elasticdl/python/tests/k8s*.py"
        # Run integration tests
        - kubectl apply -f elasticdl/manifests/examples/elasticdl-rbac.yaml
        - kubectl apply -f elasticdl/manifests/examples/elasticdl-demo-minikube.yaml
        # Validate pod statuses
        - |
          MASTER_POD_NAME=elasticdl-test-mnist-master
          CHECK_INTERVAL_SECS=10
          for i in {1..150}; do
            POD_STATUS=$(kubectl get pod $MASTER_POD_NAME -o jsonpath='{.status.phase}')
            if [ "$POD_STATUS" == "Succeeded" ]; then
              echo "Pod succeeded."
              exit 0
            elif [ "$POD_STATUS" == "Failed" ]; then
              echo "Pod failed."
              kubectl describe pod $MASTER_POD_NAME
              kubectl logs $MASTER_POD_NAME | tail
              exit 1
            else
              echo "Pod status: $POD_STATUS. Continue checking..."
              sleep $CHECK_INTERVAL_SECS;
            fi
          done
          echo "ElasticDL job timed out."
          exit 1

# Only build on this list of branches
branches:
  only:
  - develop
