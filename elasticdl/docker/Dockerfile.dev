ARG BASE_IMAGE=tensorflow/tensorflow:2.1.0-py3
# Use tensorflow/tensorflow:2.1.0-gpu-py3 if you want GPU-support.
FROM ${BASE_IMAGE}

# Replace the Splash screen from TensorFlow image.
COPY elasticdl/docker/bashrc /etc/bash.bashrc
RUN chmod a+rwx /etc/bash.bashrc

RUN apt update && \
    apt install -y unzip curl git software-properties-common g++ wget \
    libeigen3-dev

COPY elasticdl/requirements.txt /requirements.txt
COPY elasticdl/requirements-dev.txt /requirements-dev.txt
ARG EXTRA_PYPI_INDEX=https://pypi.org/simple
ARG GO_MIRROR_URL=https://dl.google.com/go
RUN pip install -r /requirements.txt --extra-index-url=${EXTRA_PYPI_INDEX}
RUN pip install -r /requirements-dev.txt --extra-index-url=${EXTRA_PYPI_INDEX}

# Install Go and related tools
ENV GOPATH /root/go
ENV PATH /usr/local/go/bin:$GOPATH/bin:$PATH
COPY elasticdl/docker/scripts/install-go.bash /
RUN /install-go.bash ${GO_MIRROR_URL} && rm /install-go.bash

# Install protobuf and protoc
COPY elasticdl/docker/scripts/install-protobuf.bash /
RUN /install-protobuf.bash && rm /install-protobuf.bash

# Install elasticdl.org/elasticdl Go package
ENV ELASTICDLPATH $GOPATH/src/elasticdl.org/elasticdl
COPY . /tmp/elasticdl
RUN cd /tmp/elasticdl && make -f elasticdl/Makefile && \
    mkdir -p $ELASTICDLPATH && \
    cp -r /tmp/elasticdl/elasticdl/pkg $ELASTICDLPATH && \
    cd $GOPATH/src/elasticdl.org/elasticdl && \
    export GO111MODULE=on && \
    go mod init elasticdl.org/elasticdl && \
    go install ./... && cd / && rm -rf /tmp/elasticdl

# Copy the data generation package to /var and run them from there.
# This assumes that the data generation package is independent with the
# rest part of ElasticDL.  The generated data will be in /data.
COPY elasticdl/python/data/recordio_gen/image_label.py /var/image_label.py
RUN python /var/image_label.py --dataset mnist --fraction 0.15 \
	--records_per_shard 4096 /data

# Copy frappe dataset
COPY elasticdl/python/data/recordio_gen/frappe_recordio_gen.py /var/frappe_recordio_gen.py
RUN python /var/frappe_recordio_gen.py --data /root/.keras/datasets --output_dir /data/frappe \
    --fraction 0.05
# Copy heart dataset
COPY elasticdl/python/data/recordio_gen/heart_recordio_gen.py /var/heart_recordio_gen.py
RUN python /var/heart_recordio_gen.py --data_dir /root/.keras/datasets --output_dir /data/heart
# Copy census dataset
COPY elasticdl/python/data/recordio_gen/census_recordio_gen.py /var/census_recordio_gen.py
RUN python /var/census_recordio_gen.py --data_dir /root/.keras/datasets --output_dir /data/census

RUN rm -rf /root/.keras/datasets
