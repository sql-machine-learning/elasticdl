ARG BASE_IMAGE=tensorflow/tensorflow:2.0.0-py3
# Use tensorflow/tensorflow:2.0.0-gpu-py3 if you want GPU-support.
FROM ${BASE_IMAGE}

# Replace the Splash screen from TensorFlow image.
COPY elasticdl/docker/bashrc /etc/bash.bashrc
RUN chmod a+rwx /etc/bash.bashrc

RUN apt-get update && apt-get install -y unzip curl git software-properties-common wget

COPY elasticdl/requirements.txt /requirements.txt
COPY elasticdl/requirements-dev.txt /requirements-dev.txt
ARG EXTRA_PYPI_INDEX=https://pypi.org/simple
RUN pip install -r /requirements.txt --extra-index-url=${EXTRA_PYPI_INDEX}
RUN pip install -r /requirements-dev.txt --extra-index-url=${EXTRA_PYPI_INDEX}

# Install Go and related tools
ENV GOPATH /root/go
ENV PATH /usr/local/go/bin:$GOPATH/bin:$PATH
COPY elasticdl/docker/scripts/install-go.bash /
RUN /install-go.bash && rm /install-go.bash

# Install protobuf and protoc
COPY elasticdl/docker/scripts/install-protobuf.bash /
RUN /install-protobuf.bash && rm /install-protobuf.bash

# Copy the data generation package to /var and run them from there.
# This assumes that the data generation package is independent with the
# rest part of ElasticDL.  The generated data will be in /data.
COPY elasticdl/python/data/recordio_gen/image_label.py /var/image_label.py
RUN python /var/image_label.py --dataset mnist --fraction 0.15 \
	--records_per_shard 4096 /data

# Copy frappe dataset
COPY elasticdl/python/data/recordio_gen/frappe_recordio_gen.py /var/frappe_recordio_gen.py
RUN python /var/frappe_recordio_gen.py --data /root/.keras/datasets --output_dir /data/frappe \
    --fraction 0.05
# Copy heart dataset
COPY elasticdl/python/data/recordio_gen/heart_recordio_gen.py /var/heart_recordio_gen.py
RUN python /var/heart_recordio_gen.py --data_dir /root/.keras/datasets --output_dir /data/heart

RUN rm -rf /root/.keras/datasets
